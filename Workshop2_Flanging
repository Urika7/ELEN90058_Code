void Flanging(void)
{

int d = floor(0.5 * BUFFER_LENGTH * (1.0-cosf(2*PI*FSR*sampledCount/SAMPLE_RATE)));


	int n_delayed = n - d;
	if (n_delayed < 0)
		n_delayed += (BUFFER_LENGTH+1);

	LeftOutput = LeftInput + ALPHA*delayBuffer[n];//Apply Filter

    delayBuffer[n_delayed] = LeftInput;//Assign next input into buffer

    //Increase index
    n++;

    //If reached end of buffer size, start writing over buffer
    if(n > BUFFER_LENGTH){
    	n = 0;
    	sampledCount++;
    }

}
